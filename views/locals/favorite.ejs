<div class="my-5">
    <h1 class="text-center mb-5">즐겨찾기</h1>
    <!-- 템플릿 출력 -->
    <div id="div_favorite"></div>
     <!-- 지도 출력 -->
    <div id="map" style="width:100%;height:400px;" class="my-5"></div>
</div>
<!-- 템플릿 생성 -->
<script id="temp_favorite" type="x-handlebars-template">
    <table class="table">
            <!-- <tr>
                <td colspan="7">
                    <input type="checkbox" id="all">
                    <button class="btn btn-warning btn-sm ms-3">선택 삭제</button>
                </td>
            </tr> -->
            <hr/>
        {{#each .}} <!-- 배열에 이름이 없다면 . 으로  -->
            <tr>
                <td><input type ="checkbox" class="chk"></td>
                <td>{{id}}</td>
                <td>{{place_name}}</td>
                <td>{{address_name}}</td>
                <td>{{phone}}</td>
                <td><button class="btn btn-primary location" x="{{x}}" y="{{y}}">위치보기</button></td>
                <td><button class="btn btn-danger btn-sm" id="{{id}}" > 삭제 </td>  <!-- "{{id}}" 블랭크가 있을 수 있으므로 /this에 들어가 있음 -->
            </tr>
        {{/each}}
    </table>
</script>
<!-- 데이터 가져오기 -->
<script type="module">
    import { app } from "/javascripts/firebase.js"; //public이 root
    import { getDatabase, ref, onValue, remove } from "https://www.gstatic.com/firebasejs/10.4.0/firebase-database.js"; //cdn으로 불러왔기 때문에 
    const db = getDatabase(app);

    // //선택 삭제 버튼을 클릭한 경우
    // $("#div_favorite").on("click",".btn-warning", function(){
    //     const chk=$("#dib_favorite .chk:checked").length;
    //     if(chk==0){
    //         alert("선택할 도서를 선택하세요!");
    //     }else{
    //         if(!confirm(chk+"개 도서를 삭제하시겠습니까?")) return;
    //         $("#div_favorite .chk:checked").each(items=>{
    //             alert("...");
                
    //         })
    //     }
    // })
    // //전체 체크박스를 클릭한 경우
    // $("#div_favorite").on("click","#all", function(){
    //     if($(this).is(":checked")){
    //         $("#div_favorite .chk").prop("checked",true);
    //     }else{
    //         $("#div_favorite .chk").prop("checked", false);
    //     }
    // })
    // //각행의 체크박스를 누를 경우
    // $("#div_favorite").on("click",".chk",function(){
    //     const all =$("#div_favorite .chk").length;
    //     const chk = $("#div_favorite .chk:checked").length;
    //     if(all==chk){
    //         $("#div_favorite #all").prop("checked",true);
    //     }else{
    //         $("#div_favorite #all").prop("checked",false);
    //     }
    // })

    
    //장바구니 목록 가져오기
    const ref_favorite=ref(db,`favorite/${sessionStorage.getItem("uid")}`);
    onValue(ref_favorite, result=>{
        let items=[];
        result.forEach(item=>{
            //console.log(item.key, item.val());
            items.push(item.val());
        });
        console.log(items);
        const temp=Handlebars.compile($("#temp_favorite").html());
        $("#div_favorite").html(temp(items));
    });
    //위치보기 버튼을 클릭한 경우
    $("#div_favorite").on("click",".location",function(){
        let x=$(this).attr('x');
        let y=$(this).attr('y');
        //console.log(x);
        var container = document.getElementById('map');
		var options = {
			center: new kakao.maps.LatLng(y, x),
			level: 3
		};
        var map = new kakao.maps.Map(container, options); //지도 생성 및 객체 리턴
        var markerPosition  = new kakao.maps.LatLng(y, x);  // 마커가 표시될 위치입니다 
        var marker = new kakao.maps.Marker({  // 마커를 생성합니다
            position: markerPosition
        });
        marker.setMap(map);  // 마커가 지도 위에 표시되도록 설정합니다
    })
    //삭제 버튼을 클릭한 경우
    $("#div_favorite").on("click",".btn-danger",async function(){
        const id = $(this).attr("id");
        if(confirm(`${id}을/를 삭제하시겠습니까?`)){ // 변수 사용하기 위해서는 ``로 묶어야 한다.
            const ref_favorite = ref(db,`favorite/${sessionStorage.getItem("uid")}/${id}`);
            await remove(ref_favorite); //삭제하면 onValue 자동 실행
            alert("삭제되었습니다.");
        }
    })
    
 </script>